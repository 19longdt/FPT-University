/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.practice_sax;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;
import java.util.stream.Collectors;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.xml.parsers.SAXParser;
import javax.xml.parsers.SAXParserFactory;

/**
 *
 * @author 19longdt
 */
public class FSax extends javax.swing.JFrame {

    /**
     * Creates new form FSax
     */
    List<Contact> contacts;

    public void creatData() {
        SAXParserFactory factory = SAXParserFactory.newInstance();

        try {
            SAXParser parser = factory.newSAXParser();

            File f = new File("src\\main\\java\\contacts.xml");
            MyHandlerSax mhs = new MyHandlerSax();
            parser.parse(f, mhs);
            contacts = mhs.getContacts();

//            for(Contact c : mhs.getBooks()){
//                System.out.println(b.toString());
//            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
        }
    }

    public void setDataSearchBy() {
        cbContact.addItem("first_name");
        cbContact.addItem("last_name");
        cbContact.addItem("company_name");
        cbContact.addItem("city");
        cbContact.addItem("county");
        cbContact.addItem("state");
        cbContact.addItem("phone1");
        cbContact.addItem("phone");
        cbContact.addItem("email");
    }

    public FSax() {

        initComponents();
        creatData();
        setDataSearchBy();
        this.setResizable(false);
        showDataTable(contacts);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cbContact = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        txtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Search by:");

        cbContact.setName("cbContact"); // NOI18N
        cbContact.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbContactActionPerformed(evt);
            }
        });

        jLabel2.setText("Search Info:");

        btnSearch.setText("Search");
        btnSearch.setName("btnSearch"); // NOI18N
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSearch)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cbContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "First Name", "Last Name", "Company", "Address", "City", "Country", "State", "Zip", "Phone", "mail"
            }
        ));
        tblData.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(tblData);
        tblData.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_INTERVAL_SELECTION);
        if (tblData.getColumnModel().getColumnCount() > 0) {
            tblData.getColumnModel().getColumn(7).setResizable(false);
            tblData.getColumnModel().getColumn(9).setResizable(false);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 759, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 33, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbContactActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbContactActionPerformed
//        txtSearch.setText(cbContact.getSelectedItem().toString());
    }//GEN-LAST:event_cbContactActionPerformed

    public void showDataTable(List<Contact> list){
        DefaultTableModel dtm = new DefaultTableModel();
        dtm = (DefaultTableModel) tblData.getModel();
        dtm.setRowCount(0);

        for (Contact c : list) {
            dtm.insertRow(dtm.getRowCount(), new Object[]{
                c.getFirst_name(), c.getLast_name(),
                c.getCompany_name(), c.getAddress(),
                c.getCity(), c.getCounty(),
                c.getState(), c.getZip(),
                c.getPhone(), c.getEmail()
            });
        }
    }
    
    
    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed

        if(txtSearch.getText().toString().isEmpty()){
            showDataTable(contacts);
        }
        
        String searchBy = cbContact.getSelectedItem().toString();

        List<Contact> contactSearch = new ArrayList<>();

        switch (searchBy) {
            case "first_name":
                contactSearch = contacts.stream().filter(item -> item.getFirst_name().contains(txtSearch.getText().toString())).collect(Collectors.toList());
                break;
            case "last_name":
                contactSearch = contacts.stream().filter(item -> item.getLast_name().contains(txtSearch.getText().toString())).collect(Collectors.toList());
                break;
            case "county":
                contactSearch = contacts.stream().filter(item -> item.getCounty().contains(txtSearch.getText().toString())).collect(Collectors.toList());
                break;
            case "company_name":
                contactSearch = contacts.stream().filter(item -> item.getCompany_name().contains(txtSearch.getText().toString())).collect(Collectors.toList());
                break;
            case "city":
                contactSearch = contacts.stream().filter(item -> item.getCity().contains(txtSearch.getText().toString())).collect(Collectors.toList());
                break;
            case "state":
                contactSearch = contacts.stream().filter(item -> item.getState().contains(txtSearch.getText().toString())).collect(Collectors.toList());
                break;
            case "phone1":
                contactSearch = contacts.stream().filter(item -> item.getPhone1().contains(txtSearch.getText().toString())).collect(Collectors.toList());
                break;
            case "phone":
                contactSearch = contacts.stream().filter(item -> item.getPhone().contains(txtSearch.getText().toString())).collect(Collectors.toList());
                break;
            case "email":
                contactSearch = contacts.stream().filter(item -> item.getEmail().contains(txtSearch.getText().toString())).collect(Collectors.toList());
                break;
        }
        
        showDataTable(contactSearch);
    }//GEN-LAST:event_btnSearchActionPerformed
//        cbContact.addItem("first_name");
//        cbContact.addItem("last_name");
//        cbContact.addItem("company_name");
//        cbContact.addItem("city");
//        cbContact.addItem("county");
//        cbContact.addItem("state");
//        cbContact.addItem("phone1");
//        cbContact.addItem("phone");
//        cbContact.addItem("email");

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FSax.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FSax.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FSax.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FSax.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FSax().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSearch;
    private javax.swing.JComboBox<String> cbContact;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
